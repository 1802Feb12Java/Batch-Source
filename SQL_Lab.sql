--Assignment 2 of Revature Training 

--2.1 SELECT
SELECT * FROM EMPLOYEE;
SELECT * FROM EMPLOYEE WHERE LASTNAME='King';
SELECT * FROM EMPLOYEE WHERE FIRSTNAME='Andrew' AND REPORTSTO IS NULL;


--2.2 ORDER BY
SELECT * FROM ALBUM ORDER BY TITLE DESC;
SELECT FIRSTNAME FROM CUSTOMER ORDER BY CITY;


--2.3 INSERT INTO 
INSERT INTO GENRE (GENREID, NAME) VALUES (26, 'EDM');
INSERT INTO GENRE (GENREID, NAME) VALUES (27, 'House');

INSERT INTO EMPLOYEE (EMPLOYEEID, LASTNAME, FIRSTNAME, TITLE) VALUES (9, 'Miocic', 'Marko', 'Baller');
INSERT INTO EMPLOYEE (EMPLOYEEID, LASTNAME, FIRSTNAME, TITLE) VALUES (10, 'Knighten', 'Matt', 'Janitor');

INSERT INTO CUSTOMER (CUSTOMERID, FIRSTNAME, LASTNAME, EMAIL) VALUES (60, 'Julian', 'Dro', 'jd101@example.com');
INSERT INTO CUSTOMER (CUSTOMERID, FIRSTNAME, LASTNAME, EMAIL) VALUES (61, 'Chris', 'Ibarra', 'ci@202@example.com');


--2.4 UPDATE
UPDATE CUSTOMER 
SET FIRSTNAME = 'Robert', LASTNAME = 'Walter'
WHERE FIRSTNAME = 'Aaron' AND LASTNAME = 'Mitchell';

UPDATE ARTIST
SET NAME = 'CCR' 
WHERE NAME = 'Creedence Clearwater Revival';


--2.5 LIKE
SELECT * FROM INVOICE
WHERE BILLINGADDRESS LIKE 'T%';


--2.6 BETWEEN
SELECT * FROM INVOICE WHERE TOTAL BETWEEN 15 AND 50;
SELECT * FROM EMPLOYEE WHERE HIREDATE BETWEEN '01-JUN-03' AND '01-MAR-04';


--2.7 DELETE
ALTER TABLE CUSTOMER
DISABLE CONSTRAINT PK_CUSTOMER;
ALTER TABLE INVOICE
DISABLE CONSTRAINT FK_CUSTOMERSUPPORTREPID;
ALTER TABLE INVOICE
DISABLE CONSTRAINT FK_INVOICECUSTOMERID;
DELETE FROM CUSTOMER WHERE FIRSTNAME='Robert' AND LASTNAME ='Walter';


--3.1 SYSTEM DEFINED FUNCTIONS
SELECT TO_CHAR
    (SYSDATE, 'MM-DD-YYYY HH24:MI:SS') "NOW"
     FROM DUAL;


SELECT LENGTH(NAME) FROM MEDIATYPE;


--3.2 SYSTEM DEFINED AGGREGATE FUNCTION
SELECT AVG(TOTAL) FROM INVOICE;

SELECT MAX(UNITPRICE) FROM TRACK;


--3.3 USER DEFINED SCALAR FUNCTIONS
CREATE OR REPLACE FUNCTION AVGINVOICELINE
RETURN NUMBER AS AVERAGE NUMBER;
    BEGIN
        SELECT AVG(UNITPRICE) INTO AVERAGE FROM INVOICELINE;
        RETURN AVERAGE;
    END; 
    /
SELECT AVGINVOICELINE FROM DUAL;


--3.4 USER DEFINED TABLE VALUE FUNCTIONS
CREATE OR REPLACE FUNCTION LEAVEOLDPPL(TEMP DATE)
RETURN VARCHAR2 AS YOUNGS VARCHAR2;
    BEGIN
        SELECT LASTNAME INTO YOUNGS FROM EMPLOYEE
        WHERE BIRTHDATE BETWEEN TEMP AND '24-FEB-18';
    RETURN YOUNGS;
    END; 
/
CREATE OR REPLACE VIEW VISIBLES
AS SELECT YOUNGS('01-JAN-69') FROM EMPLOYEE;

SELECT * FROM VISIBLES; --this one needs fixing


--4.1 BASIC STORED PROCEDURE

CREATE OR REPLACE PROCEDURE ALLNAMES 
(OUTPRINT OUT SYS_REFCURSOR) AS
    BEGIN
        OPEN OUTPRINT FOR SELECT FIRSTNAME, LASTNAME FROM EMPLOYEE;
        DBMS_SQL.RETURN_RESULT(OUTPRINT);
    END;
/ 
VAR REFCURS REFCURSOR;
EXECUTE ALLNAMES(:REFCURS);


--4.2 STORED PROCEDURE INPUT PARAMETERS
CREATE OR REPLACE PROCEDURE UPDATEERRRTHANG
(ID NUMBER, LNAME VARCHAR, FNAME VARCHAR, BDAY DATE, ADDRESSS VARCHAR, CITYY VARCHAR, STATEE VARCHAR, COUNTRYY VARCHAR,
POSTAL VARCHAR, PHONENUM VARCHAR, FAXNUM VARCHAR, EMAILL VARCHAR) AS
    BEGIN
        UPDATE EMPLOYEE
        SET LASTNAME=LNAME, FIRSTNAME=FNAME, BIRTHDATE=BDAY, ADDRESS=ADDRESSS, CITY=CITYY, STATE=STATEE, COUNTRY=COUNTRYY, 
        POSTALCODE=POSTAL, PHONE=PHONENUM, FAX=FAXNUM, EMAIL=EMAILL
        WHERE EMPLOYEEID = ID;
        COMMIT;
    END;
    /
EXECUTE UPDATEERRRTHANG(9,'polo', 'MarCo', '14-MAY-95', '261 schenck ave', 'Great Neck', 'New York', 'murica','11021','555-555-5555','777-777-7777','fakeemail@example.com' ); 

CREATE OR REPLACE PROCEDURE GETMANAGER
(ID NUMBER) AS LNAME VARCHAR2(256);
    BEGIN
        SELECT LASTNAME INTO LNAME FROM EMPLOYEE 
        WHERE REPORTSTO=EMPLOYEEID;
        COMMIT;
    END;
    /
EXECUTE GETMANAGER(5); -- this one also needs fixing

--4.3 STORED PROCEDURE OUTPUT PARAMETERS
CREATE OR REPLACE PROCEDURE NAMEANDCOMPANY
(ID IN NUMBER, PRINTER OUT SYS_REFCURSOR) AS
    BEGIN
        OPEN PRINTER FOR SELECT FIRSTNAME, LASTNAME, COMPANY
        FROM CUSTOMER
        WHERE CUSTOMERID = ID;
        DBMS_SQL.RETURN_RESULT(PRINTER);
    END;
    /
VAR REFCURS REFCURSOR;
EXECUTE NAMEANDCOMPANY(25,:REFCURS);

--5.0 TRANSACTIONS
CREATE OR REPLACE PROCEDURE TRANSACTION1
(NUMB IN INT) AS
    BEGIN
        DELETE FROM INVOICELINE WHERE INVOICEID = NUMB;   
        DELETE FROM INVOICE WHERE INVOICEID = NUMB;   
    COMMIT;
    END;
    /
EXECUTE TRANSACTION1(100);

CREATE OR REPLACE PROCEDURE TRANSACTION2
(ID NUMBER, LNAME VARCHAR, FNAME VARCHAR, ADDRESSS VARCHAR, CITYY VARCHAR, STATEE VARCHAR, COUNTRYY VARCHAR,
POSTAL VARCHAR, PHONENUM VARCHAR, FAXNUM VARCHAR, EMAILL VARCHAR, SUPPORTID NUMBER) AS
    BEGIN
        INSERT INTO CUSTOMER (CUSTOMERID, LASTNAME, FIRSTNAME, ADDRESS, CITY, STATE, COUNTRY, POSTALCODE, PHONE, FAX,EMAIL, SUPPORTREPID)
        VALUES (ID, LNAME, FNAME,  ADDRESSS, CITYY, STATEE, COUNTRYY, POSTAL, PHONENUM, FAXNUM, EMAILL, SUPPORTID);
    END;
    /
EXECUTE TRANSACTION2(99, 'allen', 'sal', 'the social','tampa', 'FL', 'USA', '44444', '123-456-7980','098-765-4321', 'fake2@example.com','7');


--6.1 TRIGGERS
CREATE SEQUENCE MASTERSEQ --SEQEUNCE FOR ALL TRIGGERS
MINVALUE 500
MAXVALUE 999999
INCREMENT BY 2;

CREATE TRIGGER EMPINSERT
AFTER INSERT ON EMPLOYEE
    BEGIN
        UPDATE EMPLOYEE SET EMPLOYEEID=MASTERSEQ.NEXTVAL;
    END;
    /

CREATE TRIGGER ALBUMUPDATE
AFTER UPDATE ON ALBUM
    BEGIN
        UPDATE ALBUM SET ALBUMID=MASTERSEQ.NEXTVAL;
    END;
    /
    
CREATE TRIGGER DELCUSTOMER
AFTER DELETE ON EMPLOYEE
    BEGIN
        UPDATE CUSTOMER SET CUSTOMERID=MASTERSEQ.NEXTVAL;
    END;
    /  

--7.1 INNER JOIN
SELECT INVOICE.INVOICEID, CUSTOMER.LASTNAME, CUSTOMER.FIRSTNAME FROM CUSTOMER
INNER JOIN INVOICE
    ON CUSTOMER.CUSTOMERID = INVOICE.CUSTOMERID;
--7.2 OUTER JOIN
SELECT CUSTOMER.CUSTOMERID, CUSTOMER.FIRSTNAME, CUSTOMER.LASTNAME, INVOICE.INVOICEID, INVOICE.TOTAL
FROM CUSTOMER,INVOICE
WHERE CUSTOMER.CUSTOMERID = INVOICE.CUSTOMERID(+);
--7.3 RIGHT JOIN
SELECT ARTIST.NAME, ALBUM.TITLE FROM ALBUM
RIGHT JOIN ARTIST ON ALBUM.ARTISTID=ARTIST.ARTISTID;
--7.4 CROSS JOIN
SELECT * FROM ALBUM
CROSS JOIN ARTIST
ORDER BY ARTIST.NAME ASC;
--7.5 SELF JOIN
SELECT *
FROM EMPLOYEE
WHERE REPORTSTO > 3;
