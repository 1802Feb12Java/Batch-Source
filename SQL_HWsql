--Q1 
Select * from Employee;                                                          
--Q2                                                       
Select * from Employee where LastName=’King’;
--Q3                                                       
Select * from Employee where FirstName=’Andrew’ AND ReportsTo IS NULL;
--Q4                                                       
Select Title from Album ORDER BY Title Desc;
--Q5                                                       
Select FirstName from Customer ORDER BY city asc;                                                      
--Q6                                                       
INSERT ALL 
INTO Genre(GenreID,Name) VALUES (26,'Music For Babies') 
INTO Genre(GenreID,Name) VALUES (27,'Babies for Music')
SELECT 1 FROM DUAL;                                                     
--Q7  
INSERT ALL 
INTO Employee(EmployeeID,LastName,FirstName) VALUES (9,'Bob','Dylan') 
INTO Employee(EmployeeID,LastName,FirstName) VALUES (10,'Kanye','West')
SELECT 1 FROM DUAL;                                                       
--Q8
INSERT ALL 
INTO Customer(CustomerID,FirstName,LastName,Email) VALUES (60,'Bob','Dylan','bobdylan@hotmail.com') 
INTO Customer(CustomerID,FirstName,LastName,Email) VALUES (61,'Kanye','West','yeaboi@gmail.com')
SELECT 1 FROM DUAL;                                                    
--Q9 
UPDATE Customer SET FirstNAME='Robert', LastName='Walter' WHERE FirstName='Aaron' AND LastName='Mitchell';                                             
--Q10                                                      
UPDATE Artist SET Name='CCR' WHERE Name='Creedence Clearwater Revival';
--Q11                                                      
Select * From Invoice Where BILLINGADDRESS LIKE 'T%';                                                        
--Q12                                                      
Select * from Invoice Where Total > 15 AND Total < 50;                                                     
--Q13 
Select * from Employee where HireDate > '01-JUN-03' and HireDate < '01-MAR-04';
--Q14                                                      
ALTER TABLE InvoiceLine
DROP CONSTRAINT FK_INVOICELINEINVOICEID;
ALTER TABLE Invoice
DROP CONSTRAINT FK_INVOICECUSTOMERID;
Delete From Customer where FirstName='Robert' and LastName='Walter';
--Q15
Select CURRENT_TIMESTAMP from DUAL;                                           
--Q16
Select LENGTH(Name) from MediaType;
--Q17                                                      
Select AVG(Total) from INVOICE;
--Q18                                                      
Select Name from Track Order by UNITPRICE Desc Fetch First 1 Rows Only;
--Q19                                                      
Create or Replace Function AveragePrice
Return Number AS
Average Number;
Begin
Select AVG(Total) into Average from INVOICE;
return Average;
End;

Select AveragePrice from Dual;
--Q20    
Create or Replace Function Above68(Bday in Date)
Return Number AS
Bool Number;
Begin
If(Bday) >= '01-JAN-69' THEN
return 1;
Else
return 0;
End if;
End;

Select FirstName,Birthdate from Employee where Above68(Birthdate)=1;                                                        
--Q21                                                      

--Q22                                                      
                                                           
--Q23                                                      
                                                           
--Q24


--Q25

--Q26

--Q27
Create OR Replace Procedure NameandComp (CustID Int)
As
custfname OUT varchar2(80 Byte);
custlname OUT varchar2(80 BYTE);
custcomp OUT varchar2(80 BYTE);
Begin
Select FirstName,LastName,Company Into custfname,custlname,custcomp from Customer where CustID=CustomerID;
End;

Execute NameandComp(1);

--6.1
Create OR Replace Trigger NewEmployee
After Insert On Employee
For Each Row
Begin
    DBMS_OUTPUT.PUT_LINE('Yeah');
End;
--
Create OR Replace Trigger NewAlbum
After Insert On Album
For Each Row
Begin
    DBMS_OUTPUT.PUT_LINE('Yeah');
End;
--
Create OR Replace Trigger RemoveCustomer
After Delete On Customer
For Each Row
Begin
    DBMS_OUTPUT.PUT_LINE('Yeah');
End;
--Q31
Select Customer.FirstName, Invoice.InvoiceID
from Customer
Inner Join Invoice on Invoice.CUSTOMERID=Customer.CustomerID;
--Q32
Select Customer.CustomerID,Customer.FirstName, Customer.LastName, Invoice.InvoiceID,Invoice.total
from Customer
Full Outer Join Invoice on Invoice.CustomerID=Customer.CustomerID;
--Q33
Select artist.name,album.title from Artist Right Join Album on Album.ARTISTID=Artist.ArtistID;
--Q34
Select artist.name,album.title from artist cross join album Order by artist.name asc
--Q35
Select * from Employee D, Employee B where D.Reportsto=B.Reportsto;
