--2.1 
Select * from Employee;                                                          
                                                      
Select * from Employee where LastName=’King’;
                                                    
Select * from Employee where FirstName=’Andrew’ AND ReportsTo IS NULL;

--2.2                                                      
Select Title from Album ORDER BY Title Desc;
                                                      
Select FirstName from Customer ORDER BY city asc;

--2.3                                                       
INSERT ALL 
INTO Genre(GenreID,Name) VALUES (26,'Music For Babies') 
INTO Genre(GenreID,Name) VALUES (27,'Babies for Music')
SELECT 1 FROM DUAL;                                                     

INSERT ALL 
INTO Employee(EmployeeID,LastName,FirstName) VALUES (9,'Bob','Dylan') 
INTO Employee(EmployeeID,LastName,FirstName) VALUES (10,'Kanye','West')
SELECT 1 FROM DUAL;                                                       

INSERT ALL 
INTO Customer(CustomerID,FirstName,LastName,Email) VALUES (60,'Bob','Dylan','bobdylan@hotmail.com') 
INTO Customer(CustomerID,FirstName,LastName,Email) VALUES (61,'Kanye','West','yeaboi@gmail.com')
SELECT 1 FROM DUAL;  

--2.4
UPDATE Customer SET FirstNAME='Robert', LastName='Walter' WHERE FirstName='Aaron' AND LastName='Mitchell';                                             
                                                      
UPDATE Artist SET Name='CCR' WHERE Name='Creedence Clearwater Revival';

--2.5                                                      
Select * From Invoice Where BILLINGADDRESS LIKE 'T%'; 

--2.6                                                     
Select * from Invoice Where Total > 15 AND Total < 50;                                                     

Select * from Employee where HireDate > '01-JUN-03' and HireDate < '01-MAR-04';

--2.7                                                      
ALTER TABLE InvoiceLine
DROP CONSTRAINT FK_INVOICELINEINVOICEID;
ALTER TABLE Invoice
DROP CONSTRAINT FK_INVOICECUSTOMERID;
Delete From Customer where FirstName='Robert' and LastName='Walter';

--3.1
Select CURRENT_TIMESTAMP from DUAL;                                           

Select LENGTH(Name) from MediaType;

--3.2                                                      
Select AVG(Total) from INVOICE;
                                                    
Select Name from Track Order by UNITPRICE Desc Fetch First 1 Rows Only;

--3.3                                                      
Create or Replace Function AveragePrice
Return Number AS
Average Number;
Begin
Select AVG(Total) into Average from INVOICE;
return Average;
End;

Select AveragePrice from Dual;

--3.4
Create or Replace Function Above68(Bday in Date)
Return Number AS
Bool Number;
Begin
If(Bday) >= '01-JAN-69' THEN
return 1;
Else
return 0;
End if;
End;

Select FirstName,Birthdate from Employee where Above68(Birthdate)=1;    

--4.1
Create or Replace Procedure EmployeeNames
(empcursor out sys_refcursor)
AS BEGIN
OPEN empcursor for 
Select FirstName,LastName from Employee;
End;

--4.2
Create or Replace PROCEDURE PersonalInfo 
(empID IN number, Fname in varchar2, Lname in varchar2) 
AS  
BEGIN
UPDATE employee SET firstname= Fname, lastname = Lname  WHERE employeeid = empId; 
END;

Create or Replace PROCEDURE Managers 
(empID IN number, FnameMan out varchar2, LnameMan out varchar2) 
AS  
BEGIN
Select FirstName,LastName INTO FnameMan,LnameMan from employee 
where employeeid=(Select reportsto from employee where employeeid=empid);
END;

--4.3
Create or Replace PROCEDURE NameandComp
(CustID IN number, FName out varchar2, Comp out varchar2) 
AS  
BEGIN
Select FirstName,Company INTO Fname,Comp from Customer where CustomerID=Custid;
END;

--5
Create or Replace PROCEDURE InvoicDelete
(InvID IN number) 
AS  
BEGIN
Delete From Invoice where InvoiceID=InvID;
Commit;
END;

Create or Replace PROCEDURE NewCustomer
AS  
BEGIN
Insert INTO Customer(CustomerID,FirstName,LastName,Email) VALUES (62,'Bob','Dylan','bobdylan@hotmail.com'); 
Commit;
END;

--6.1
Create OR Replace Trigger NewEmployee
After Insert On Employee
For Each Row
Begin
    DBMS_OUTPUT.PUT_LINE('Yeah');
End;

Create OR Replace Trigger NewAlbum
After Insert On Album
For Each Row
Begin
    DBMS_OUTPUT.PUT_LINE('Yeah');
End;

Create OR Replace Trigger RemoveCustomer
After Delete On Customer
For Each Row
Begin
    DBMS_OUTPUT.PUT_LINE('Yeah');
End;

--7.1
Select Customer.FirstName, Invoice.InvoiceID
from Customer
Inner Join Invoice on Invoice.CUSTOMERID=Customer.CustomerID;

--7.2
Select Customer.CustomerID,Customer.FirstName, Customer.LastName, Invoice.InvoiceID,Invoice.total
from Customer
Full Outer Join Invoice on Invoice.CustomerID=Customer.CustomerID;

--7.3
Select artist.name,album.title from Artist Right Join Album on Album.ARTISTID=Artist.ArtistID;

--7.4
Select artist.name,album.title from artist cross join album Order by artist.name asc

--7.5
Select * from Employee D, Employee B where D.Reportsto=B.Reportsto;
