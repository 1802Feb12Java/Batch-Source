package com.revature;

import java.util.Arrays;

//Overloading
//The first thing we look for is:
	//Exact Match
	//Conversion -> Primitives/Objects cast themselves to other types.
	//Boxing -> Primitives/Objects will undergo Auto Boxing/UnBoxing
	//Varargs -> arguments wrapped into arrays.
		//Method that will take in a variable number of arguments
		//Vararg must be the last argument, can be of any type

public class Wrapper {
	
	public static void main(String[] args) {
		//conversion
		int a = 4;
		//boxing
		Double objectDouble = 6.6;
		System.out.println(addThis(a));
		System.out.println(addThis(objectDouble));
		//varargs
		method(7,8,3,2,7);
		method(1,2,3,4,5,6,7,7,8,9,3,4,4,2,4,6,7,4,4);
		method(a, objectDouble.intValue(), (int) (double) objectDouble, 12);
		method("@@@@@@@@@@@@@@@", a, objectDouble.intValue(), (int) (double) objectDouble, 12);
		method("@@@@@@@@@@@@@@@");
	}
	
	public static double addThis(double deez) {
		return deez+5;
	}
	
	public static void method(int... x) {
		System.out.println(Arrays.toString(x));
	}
	
	public static void method(String s, int...x) {
		System.out.println(s + " " + Arrays.toString(x));
	}
}
