--doing a count generater to input into trigger
CREATE SEQUENCE BANK_USER_SEQ;
CREATE SEQUENCE TRANSACTION_SEQ;

--make a trigger to do the transaction sequence numbers database-side
CREATE OR REPLACE TRIGGER GENERATE_TRANSACTION_IDS
BEFORE INSERT ON TRANSACTION 
FOR EACH ROW
DECLARE 
    T_ID NUMBER;
BEGIN
    SELECT TRANSACTION_SEQ.NEXTVAL INTO T_ID
     FROM DUAL;
     If :NEW.TRANSACTION_ID = 0 THEN
     :new.TRANSACTION_ID := T_ID;
    End if;
END;
/

--DEFAULT NO USER FOR TRANSACTIONS
CREATE OR REPLACE PROCEDURE ADD_ZERO_ACCOUNT AS
BEGIN
    INSERT INTO BANK_ACCOUNT (ACCOUNT_ID, BALANCE)
    VALUES (0, 0);
END;
/
CALL ADD_ZERO_ACCOUNT();


--Use a sequence to generate BANK_ACCOUNT IDs
CREATE SEQUENCE BANK_ACCOUNT_SEQ;

--CREATE OR REPLACE TRIGGER GEN_BANK_ACC_ID
--AFTER INSERT ON BANK_ACCOUNT 
--DECLARE 
--    B_ID NUMBER;
--BEGIN
--    SELECT BANK_ACCOUNT_SEQ.NEXTVAL INTO B_ID
--     FROM DUAL;
--    UPDATE BANK_ACCOUNT
--    SET ACCOUNT_ID = B_ID
--    WHERE ACCOUNT_ID = 0;
--END;
--/
--Test Trigger
INSERT INTO BANK_ACCOUNT VALUES(0, 0, NULL);

SELECT * FROM BANK_ACCOUNT;

SELECT * FROM BANK_USER WHERE FNAME = 'jen', LNAME = 'fox' AND BIRTHDATE = TO_DATE('1990-10-10' AND 'yyyy/mm/dd')

--Set up trigger to replace any null dates


