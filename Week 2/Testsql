CREATE TABLE STUDENTS(S_ID INT,S_NAME VARCHAR(10),SC_ID INT);

CREATE TABLE SCHOOLS(SC_ID INT, SC_NAME VARCHAR(10));

iNSERT INTO STUDENTS VALUES(1,'MATT',10);
iNSERT INTO STUDENTS VALUES(2,'JOSH',20);
iNSERT INTO STUDENTS VALUES(3,'JUSTIN',30);
iNSERT INTO STUDENTS VALUES(4,'TIM',40);
UPDATE STUDENTS SET S_ID=5 WHERE S_NAME='SEAL';
iNSERT INTO SCHOOLS VALUES(10,'AL');
iNSERT INTO SCHOOLS VALUES(20,'UGA');
iNSERT INTO SCHOOLS VALUES(30,'OSU');
iNSERT INTO SCHOOLS VALUES(40,'USF');
iNSERT INTO SCHOOLS VALUES(50,'UNR');
iNSERT INTO SCHOOLS VALUES(3,'HARD ');

SELECT * FROM STUDENTS LEFT JOIN SCHOOLS
ON SCHOOLS.SC_ID = STUDENTS.SC_ID WHERE SC_NAME='UNR';

--FULL JOIN
SELECT * FROM SCHOOLS FULL OUTER JOIN STUDENTS ON SCHOOLS.SC_ID=STUDENTS.SC_ID;

CREATE SEQUENCE MYSEQ2
MAXVALUE 3238902
START WITH 1
INCREMENT BY 40;
--TRIGGER
CREATE OR REPLACE TRIGGER SCHOOLTRIGER
AFTER INSERT ON SCHOOLS

BEGIN
UPDATE SCHOOLS SET SC_ID=MYSEQ2.NEXTVAL;
END;
/

--VIEW TO A KILL
CREATE VIEW MYVIEW
AS SELECT TITLE FROM ALBUM
UNION
SELECT NAME FROM ARTIST;


SELECT * FROM MYVIEW;

--create function
CREATE OR REPLACE FUNCTION CALC_TAX
(T_ID IN NUMBER, TAX IN NUMBER)
  RETURN NUMBER AS
  TOTAL_PRICE NUMBER(10, 2);
  BEGIN
    SELECT UNITPRICE INTO TOTAL_PRICE 
    FROM TRACK WHERE TRACKID = T_ID;
    RETURN TOTAL_PRICE + (TOTAL_PRICE * TAX);
  END;
  /
  SELECT CALC_TAX(2921,.07) FROM DUAL;

--STORED PROCEDURE
CREATE OR REPLACE PROCEDURE SCHINSERTPRO
(ID in INT,NAME IN VARCHAR2) AS
  BEGIN
  INSERT INTO SCHOOLS VALUES(ID,NAME);
  COMMIT;
  END;
  /
 
EXECUTE SCHINSERTPRO(88,'UFU');
