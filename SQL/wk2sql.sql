SELECT * FROM ALBUM WHERE ALBUMID=2 OR ALBUMID=235;
SELECT name FROM artist WHERE artistid=2 OR artistid=150;
SELECT COUNT(EMPLOYEEID),COUNTRY,CITY FROM EMPLOYEE GROUP BY COUNTRY,CITY HAVING COUNT(EMPLOYEEID)>1;
SELECT COUNT(EMPLOYEEID),COUNTRY,CITY FROM EMPLOYEE GROUP BY COUNTRY,CITY ORDER BY COUNT(EMPLOYEEID) DESC;
SELECT CONCAT(NAME,COMPOSER) FROM TRACK WHERE TRACKID < 5;
SELECT CONCAT(NAME,UNITPRICE) FROM TRACK FETCH FIRST 5 ROWS ONLY;

--SUB QUERIES
    --SELECT WITHIN A SELECT
    --NARROW DOWN RESULT SETS
    --NESTED IN THE WHERE CLAUSE
--2 TYPES
    --CORRELATED AND NON-CORRELATED
    --NON-C: INNER QUERY CAN EXECUTE INDEPENDENLY OF THE OUTER
    --CORR: THE INN QUERY IS DEPENDENT ON THE OUTER QUERY
    --INNER QUERY WILL EXECUTE FIRST

/*TABLE: STUDENT DETAILS
 S_ID, S_NAME, S_MAJOR
 i.e. NON-CORR: SELECT S_ID, S_NAME FROM STUDENTDETAILS
                WHERE S_NAME IN(SELECT S_NAME FROM STUDENT DETAILS WHERE S_MAJOR='SOMETHING');

O_ID, PRODUCT, QTY          P_ID, P_NAME
      CORR:     SELECT P NAME FROM AS P WHERE P_ID(SELECT O.PRODCUT FROM ORDER AS O WHERE O.PRODUCT=P.P_  NAME);
*/

SELECT * FROM INVOICE INNER JOIN CUSTOMER ON INVOICE.CUSTOMERID=CUSTOMER.CUSTOMERID WHERE INVOICE.CUSTOMERID=1;


--2/22/2018 Examples
--SEQUENCES
CREATE SEQUENCE CUSTOMSEQ
MINVALUE 2
MAXVALUE 99
START WITH 65
INCREMENT BY -4;

SELECT CUSTOMSEQ.NEXTVAL FROM DUAL;

--TRIGGERS???

--VIEWS
CREATE VIEW MYVIEW
AS SELECT TITLE FROM ALBUM
UNION 
SELECT NAME FROM ARTIST;

SELECT * FROM MYVIEW;

--FUNCTION
CREATE OR REPLACE FUNCTION CALC_TAX
(T_ID IN NUMBER, TAX IN NUMBER) RETURN NUMBER AS
TOTAL_PRICE NUMBER(10,2);
BEGIN
    SELECT UNITPRICE INTO TOTAL_PRICE
    FROM TRACK WHERE TRACKID = T_ID;
    RETURN TOTAL_PRICE +(TOTAL_PRICE *TAX);
END;
/

SET SERVEROUTPUT ON;
DECLARE
E_ID EMPLOYEES.EMPLOYEEID%TYPE;
E_LNAME EMPLOYEE.LASTNAME%TYPE;
E_TIT EMPLOYEE.TITLE%TYPE;
CURSOR E_CURS IS 
    SELECT EMPLOYEEID, LASTNAME, TITLE FROM EMPLOYEE;
BEGIN
    OPEN E_CURS;
    LOOP
    FETCH E_CURS INTO E_ID, E_LNAME, E_TIT;
    EXIT WHEN E_CURS%NOTFOUNDT;
    DBMS_OUTPU,PUT_LINE(E_ID || ' ' || E_LNAME || ' ' || E_TIT);
    END LOOP;
    CLOSE E_CURS;
END;
/
